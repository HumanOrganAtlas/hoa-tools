[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools", "setuptools-scm"]

[dependency-groups]
dev = ["hoa-tools[docs,dev,test]"]

[project]
authors = [{ email = "d.stansby@ucl.ac.uk", name = "David Stansby" }]
classifiers = [
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]
dependencies = [
    "dask[array]",
    "gcsfs>2023",
    "pandas>=2",
    "pydantic>=2",
    "simpleitk",
    "xarray",
    "zarr<3,>2.16",
]
description = "Tools for working with the Human Organ Atlas"
dynamic = ["version"]
keywords = []
name = "hoa-tools"
optional-dependencies = { dev = [
    "build",
    "mypy",
    "pre-commit",
    "ruff",
    "jupyterlab",
    "jupytext",
], docs = [
    "mkdocs",
    "mkdocstrings-python",
    "mkdocs-material",
    "mkdocs-jupyter",
    "griffe-pydantic",
    # Packages needed for tutorial
    "matplotlib",
    "numpydoc",
    "scikit-image",
], test = [
    "matplotlib",
    "pytest",
    "pytest-accept",
    "pytest-cov",
    "pytest-doctestplus",
    "pytest-vcr",
    "scikit-image",
] }
readme = "README.md"
requires-python = ">=3.10"
license.file = "LICENSE.md"
urls.homepage = "https://github.com/HumanOrganAtlas/hoa-tools"

[tool.codespell]
skip = 'schemas/*'

[tool.coverage]
report = { sort = "cover" }
run = { branch = true, parallel = true, source = ["hoa_tools"] }
paths.source = ["src/hoa_tools"]

[tool.mypy]
exclude = ['docs/_build.*']
plugins = ["pydantic.mypy"]
strict = true

[[tool.mypy.overrides]]
module = "hoa_tools._hoa_model"
disallow_any_generics = false # See https://github.com/koxudaxi/datamodel-code-generator/issues/1546

[tool.setuptools_scm]
local_scheme = "no-local-version"
write_to = "src/hoa_tools/_version.py"

[tool.tomlsort]
all = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
overrides."project.classifiers".inline_arrays = false
overrides."tool.coverage.paths.source".inline_arrays = false
